exit
alpha_ids
errors
exit
["hi", "there"][0].to_s
["hi", "there"]
hero_hash[:wid]
hero_hash["wid"]
hero_hash
hero_names
errors
exit
hero_hash["wid"]
hero_hash
errors
exit
errors
exit
hero_key["wid"]
errors
alpha_ids
exit
self.matchups_showing_counters[yi][0] -0.15
self.matchups_showing_counters[yi][0] -.15
self.matchups_showing_counters[yi][0]
hero_matchups[0]
hero_matchups
distance_from_half
exit
hero_matchups = hero_matchups.each_with_index.map do |matchup, i|
      end
        matchup - distance_from_half
      else
        0.5
      if i == yi
    hero_matchups = hero_matchups.each_with_index.map do |matchup, i|
distance_from_half + 0.5
distance_from_half
hero_matchups
exit
array_mean(arr)
arr = [1,2,nil,4,5]
array_mean(hero_matchups)
hero_matchups
po -= 0.5
po -= .5
po
po = poo / 20.0
po= _
poo / 20.0
poo
hero_matchups.each { |matchup| poo += matchup if matchup != nil }
poo = 0
distance_from_half
yi
hero_matchups
exit
self.matchups_showing_counters.each_with_index { |matchup, i| p self.matchups_showing_counters[index][i] }  
ap self.matchups_showing_counters
self.matchups_showing_counters
self.matchups_without_index
o.matchups_without_index
hero_matchups_without_index.each { |matchup| p matchup }
self.matchups_showing_counters.each_with_index { |matchup, i| p self.matchups_showing_counters[index][i] }  
hero_matchups_without_index.sort[0] - distance_from_half
hero_matchups_without_index.sort[-2] - distance_from_half
hero_matchups_without_index.sort
distance_from_half
hero_matchups_without_index.length
hero_matchups_without_index
continue
exit
vertical_matchup
exit
distance_from_half
exit
index
hero_matchups
"bruh"
    end
      end
        matchup - distance_from_half
      else
        0.5
      if i == index
    hero_matchups = hero_matchups.each_with_index.map do |matchup, i|
"bruh"
stop
end
    end
      end
        matchup - distance_from_half
      else
        0.5
      if i == index
    end    hero_matchups = hero_matchups.each_with_index.map do |matchup, i|
      end
        matchup - distance_from_half
      else
        0.5
      if i == index
hero_matchups = hero_matchups.each_with_index.map do |matchup, i|
distance_from_half = array_mean(hero_matchups_without_index) - 0.5
- 0.5
distance_from_half = array_mean(hero_matchups_without_index)
hero_matchups_without_index.length
hero_matchups_without_index.reduce(:+)/20.0
hero_matchups_without_index.reduce(:+)
hero_matchups_without_index
array_mean
exit
require 'deep_enumerable'
self.matchups
self.matchups[0]
Self.matchups[0]
self.matchups
exit
Hero.find_by("alpha_id", 0)
Hero.first
Hero.find_by("alpha_id", counter[1]).first
Hero.find_by(alpha_id, counter[1]).first
Hero.find_by(alpha_id: counter[1]).first
Hero.where(alpha_id: counter[1]).first
Hero.where(alpha_id: counter[1])
Hero.where(alpha_id: counter[1)
counter
exit
ows
exit
ows.matchups
ows
exit
Hero.matchups
exit
points_for_hero
Hero.matchups[alpha_id][opponent_alpha_id][0]
opponent_alpha_id
alpha_id
exit
hero.matchups
hero
exit
arr[0][0]
arr[0]
arr = Array.new(3, [0,0])
hero.matchups[opponent_alpha_id][0]
hero.matchups[opponent_alpha_id]
hero.matchups
opponent_name
opponent_alpha_id
hero
